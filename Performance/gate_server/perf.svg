<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>ip_local_deliver (2 samples, 0.01%)</title><rect x="658.7" y="261" width="0.1" height="15.0" fill="rgb(230,189,16)" rx="2" ry="2" />
<text  x="661.70" y="271.5" ></text>
</g>
<g >
<title>sk_stream_wait_memory (1,127 samples, 6.92%)</title><rect x="1034.5" y="437" width="81.7" height="15.0" fill="rgb(254,105,3)" rx="2" ry="2" />
<text  x="1037.55" y="447.5" >sk_stream..</text>
</g>
<g >
<title>iov_iter_init (30 samples, 0.18%)</title><rect x="768.0" y="501" width="2.2" height="15.0" fill="rgb(225,116,42)" rx="2" ry="2" />
<text  x="770.99" y="511.5" ></text>
</g>
<g >
<title>ip_rcv (3 samples, 0.02%)</title><rect x="454.8" y="469" width="0.3" height="15.0" fill="rgb(234,212,22)" rx="2" ry="2" />
<text  x="457.84" y="479.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (5 samples, 0.03%)</title><rect x="806.5" y="469" width="0.3" height="15.0" fill="rgb(248,93,50)" rx="2" ry="2" />
<text  x="809.47" y="479.5" ></text>
</g>
<g >
<title>lock_sock_nested (314 samples, 1.93%)</title><rect x="907.9" y="453" width="22.7" height="15.0" fill="rgb(251,123,35)" rx="2" ry="2" />
<text  x="910.86" y="463.5" >l..</text>
</g>
<g >
<title>skb_page_frag_refill (54 samples, 0.33%)</title><rect x="1027.9" y="421" width="3.9" height="15.0" fill="rgb(213,7,1)" rx="2" ry="2" />
<text  x="1030.88" y="431.5" ></text>
</g>
<g >
<title>inet_recvmsg (12 samples, 0.07%)</title><rect x="658.4" y="485" width="0.9" height="15.0" fill="rgb(240,167,17)" rx="2" ry="2" />
<text  x="661.41" y="495.5" ></text>
</g>
<g >
<title>ip_finish_output2 (5 samples, 0.03%)</title><rect x="658.5" y="405" width="0.3" height="15.0" fill="rgb(246,34,29)" rx="2" ry="2" />
<text  x="661.49" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (72 samples, 0.44%)</title><rect x="1013.1" y="101" width="5.2" height="15.0" fill="rgb(220,191,8)" rx="2" ry="2" />
<text  x="1016.09" y="111.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (157 samples, 0.96%)</title><rect x="1011.2" y="293" width="11.4" height="15.0" fill="rgb(236,12,52)" rx="2" ry="2" />
<text  x="1014.21" y="303.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1189.7" y="485" width="0.2" height="15.0" fill="rgb(225,204,25)" rx="2" ry="2" />
<text  x="1192.71" y="495.5" ></text>
</g>
<g >
<title>process_backlog (3 samples, 0.02%)</title><rect x="454.8" y="501" width="0.3" height="15.0" fill="rgb(221,82,1)" rx="2" ry="2" />
<text  x="457.84" y="511.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (21 samples, 0.13%)</title><rect x="1024.3" y="437" width="1.5" height="15.0" fill="rgb(252,166,29)" rx="2" ry="2" />
<text  x="1027.33" y="447.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (5 samples, 0.03%)</title><rect x="1160.4" y="501" width="0.4" height="15.0" fill="rgb(211,87,13)" rx="2" ry="2" />
<text  x="1163.43" y="511.5" ></text>
</g>
<g >
<title>fput (2 samples, 0.01%)</title><rect x="644.8" y="517" width="0.1" height="15.0" fill="rgb(249,22,28)" rx="2" ry="2" />
<text  x="647.79" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (113 samples, 0.69%)</title><rect x="446.4" y="581" width="8.2" height="15.0" fill="rgb(228,65,48)" rx="2" ry="2" />
<text  x="449.43" y="591.5" ></text>
</g>
<g >
<title>__fget_light (5 samples, 0.03%)</title><rect x="641.6" y="517" width="0.4" height="15.0" fill="rgb(247,182,34)" rx="2" ry="2" />
<text  x="644.60" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (142 samples, 0.87%)</title><rect x="937.4" y="437" width="10.3" height="15.0" fill="rgb(242,137,23)" rx="2" ry="2" />
<text  x="940.43" y="447.5" ></text>
</g>
<g >
<title>sock_poll (3 samples, 0.02%)</title><rect x="642.5" y="453" width="0.2" height="15.0" fill="rgb(251,138,13)" rx="2" ry="2" />
<text  x="645.47" y="463.5" ></text>
</g>
<g >
<title>security_file_permission (449 samples, 2.76%)</title><rect x="1157.3" y="517" width="32.6" height="15.0" fill="rgb(221,1,48)" rx="2" ry="2" />
<text  x="1160.31" y="527.5" >se..</text>
</g>
<g >
<title>__dev_queue_xmit (5 samples, 0.03%)</title><rect x="1010.8" y="341" width="0.4" height="15.0" fill="rgb(228,22,17)" rx="2" ry="2" />
<text  x="1013.85" y="351.5" ></text>
</g>
<g >
<title>skb_release_all (2 samples, 0.01%)</title><rect x="1012.6" y="117" width="0.1" height="15.0" fill="rgb(228,99,19)" rx="2" ry="2" />
<text  x="1015.59" y="127.5" ></text>
</g>
<g >
<title>sk_reset_timer (3 samples, 0.02%)</title><rect x="1023.9" y="389" width="0.2" height="15.0" fill="rgb(208,202,38)" rx="2" ry="2" />
<text  x="1026.89" y="399.5" ></text>
</g>
<g >
<title>do_softirq.part.19 (157 samples, 0.96%)</title><rect x="1011.2" y="325" width="11.4" height="15.0" fill="rgb(219,41,35)" rx="2" ry="2" />
<text  x="1014.21" y="335.5" ></text>
</g>
<g >
<title>__slab_alloc (5 samples, 0.03%)</title><rect x="1032.2" y="373" width="0.3" height="15.0" fill="rgb(220,187,39)" rx="2" ry="2" />
<text  x="1035.15" y="383.5" ></text>
</g>
<g >
<title>rcu_all_qs (76 samples, 0.47%)</title><rect x="858.5" y="421" width="5.5" height="15.0" fill="rgb(245,190,11)" rx="2" ry="2" />
<text  x="861.51" y="431.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (5 samples, 0.03%)</title><rect x="767.6" y="501" width="0.4" height="15.0" fill="rgb(210,74,35)" rx="2" ry="2" />
<text  x="770.63" y="511.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (17 samples, 0.10%)</title><rect x="1031.8" y="437" width="1.2" height="15.0" fill="rgb(243,221,36)" rx="2" ry="2" />
<text  x="1034.79" y="447.5" ></text>
</g>
<g >
<title>__copy_skb_header (2 samples, 0.01%)</title><rect x="1022.8" y="373" width="0.2" height="15.0" fill="rgb(212,201,40)" rx="2" ry="2" />
<text  x="1025.81" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.01%)</title><rect x="1031.6" y="357" width="0.2" height="15.0" fill="rgb(228,195,26)" rx="2" ry="2" />
<text  x="1034.65" y="367.5" ></text>
</g>
<g >
<title>tcp_rcv_established (3 samples, 0.02%)</title><rect x="454.8" y="389" width="0.3" height="15.0" fill="rgb(236,189,10)" rx="2" ry="2" />
<text  x="457.84" y="399.5" ></text>
</g>
<g >
<title>wake_all_kswapds (2 samples, 0.01%)</title><rect x="1031.6" y="373" width="0.2" height="15.0" fill="rgb(222,98,31)" rx="2" ry="2" />
<text  x="1034.65" y="383.5" ></text>
</g>
<g >
<title>_cond_resched (95 samples, 0.58%)</title><rect x="857.1" y="437" width="6.9" height="15.0" fill="rgb(211,126,35)" rx="2" ry="2" />
<text  x="860.13" y="447.5" ></text>
</g>
<g >
<title>tcp_current_mss (394 samples, 2.42%)</title><rect x="1126.1" y="421" width="28.5" height="15.0" fill="rgb(249,14,39)" rx="2" ry="2" />
<text  x="1129.08" y="431.5" >tc..</text>
</g>
<g >
<title>tcp_release_cb (126 samples, 0.77%)</title><rect x="947.7" y="437" width="9.2" height="15.0" fill="rgb(239,146,15)" rx="2" ry="2" />
<text  x="950.72" y="447.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (534 samples, 3.28%)</title><rect x="840.5" y="469" width="38.7" height="15.0" fill="rgb(233,184,24)" rx="2" ry="2" />
<text  x="843.54" y="479.5" >sec..</text>
</g>
<g >
<title>ip_rcv (154 samples, 0.95%)</title><rect x="1011.4" y="229" width="11.1" height="15.0" fill="rgb(206,210,35)" rx="2" ry="2" />
<text  x="1014.35" y="239.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (3 samples, 0.02%)</title><rect x="1012.3" y="69" width="0.2" height="15.0" fill="rgb(249,72,6)" rx="2" ry="2" />
<text  x="1015.30" y="79.5" ></text>
</g>
<g >
<title>__fsnotify_parent (6 samples, 0.04%)</title><rect x="748.6" y="517" width="0.5" height="15.0" fill="rgb(210,177,34)" rx="2" ry="2" />
<text  x="751.64" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_write (177 samples, 1.09%)</title><rect x="645.0" y="549" width="12.8" height="15.0" fill="rgb(215,122,26)" rx="2" ry="2" />
<text  x="648.01" y="559.5" ></text>
</g>
<g >
<title>__slab_alloc (2 samples, 0.01%)</title><rect x="1012.1" y="69" width="0.1" height="15.0" fill="rgb(220,46,10)" rx="2" ry="2" />
<text  x="1015.08" y="79.5" ></text>
</g>
<g >
<title>sock_sendmsg (4,891 samples, 30.04%)</title><rect x="800.4" y="485" width="354.5" height="15.0" fill="rgb(237,209,49)" rx="2" ry="2" />
<text  x="803.39" y="495.5" >sock_sendmsg</text>
</g>
<g >
<title>tcp_recvmsg (12 samples, 0.07%)</title><rect x="658.4" y="469" width="0.9" height="15.0" fill="rgb(220,211,10)" rx="2" ry="2" />
<text  x="661.41" y="479.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (157 samples, 0.96%)</title><rect x="1011.2" y="341" width="11.4" height="15.0" fill="rgb(219,45,47)" rx="2" ry="2" />
<text  x="1014.21" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (3 samples, 0.02%)</title><rect x="659.4" y="517" width="0.2" height="15.0" fill="rgb(227,115,26)" rx="2" ry="2" />
<text  x="662.36" y="527.5" ></text>
</g>
<g >
<title>skb_copy_bits (5 samples, 0.03%)</title><rect x="1021.6" y="85" width="0.4" height="15.0" fill="rgb(212,7,18)" rx="2" ry="2" />
<text  x="1024.65" y="95.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (6 samples, 0.04%)</title><rect x="937.0" y="421" width="0.4" height="15.0" fill="rgb(223,41,22)" rx="2" ry="2" />
<text  x="940.00" y="431.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (19 samples, 0.12%)</title><rect x="455.1" y="517" width="1.3" height="15.0" fill="rgb(210,86,43)" rx="2" ry="2" />
<text  x="458.05" y="527.5" ></text>
</g>
<g >
<title>__vfs_write (79 samples, 0.49%)</title><rect x="749.1" y="517" width="5.7" height="15.0" fill="rgb(235,207,47)" rx="2" ry="2" />
<text  x="752.08" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (6 samples, 0.04%)</title><rect x="1032.5" y="405" width="0.5" height="15.0" fill="rgb(209,42,21)" rx="2" ry="2" />
<text  x="1035.52" y="415.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (3 samples, 0.02%)</title><rect x="454.8" y="437" width="0.3" height="15.0" fill="rgb(232,77,0)" rx="2" ry="2" />
<text  x="457.84" y="447.5" ></text>
</g>
<g >
<title>apparmor_file_permission (78 samples, 0.48%)</title><rect x="1160.8" y="501" width="5.6" height="15.0" fill="rgb(210,186,14)" rx="2" ry="2" />
<text  x="1163.79" y="511.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.01%)</title><rect x="658.1" y="485" width="0.1" height="15.0" fill="rgb(226,40,42)" rx="2" ry="2" />
<text  x="661.05" y="495.5" ></text>
</g>
<g >
<title>ksys_write (7,318 samples, 44.95%)</title><rect x="659.6" y="549" width="530.3" height="15.0" fill="rgb(237,103,51)" rx="2" ry="2" />
<text  x="662.57" y="559.5" >ksys_write</text>
</g>
<g >
<title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="1012.2" y="133" width="0.4" height="15.0" fill="rgb(248,223,10)" rx="2" ry="2" />
<text  x="1015.22" y="143.5" ></text>
</g>
<g >
<title>net_rx_action (2 samples, 0.01%)</title><rect x="658.7" y="325" width="0.1" height="15.0" fill="rgb(205,106,38)" rx="2" ry="2" />
<text  x="661.70" y="335.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (157 samples, 0.96%)</title><rect x="1011.2" y="309" width="11.4" height="15.0" fill="rgb(248,197,26)" rx="2" ry="2" />
<text  x="1014.21" y="319.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (22 samples, 0.14%)</title><rect x="1116.9" y="437" width="1.6" height="15.0" fill="rgb(222,64,21)" rx="2" ry="2" />
<text  x="1119.95" y="447.5" ></text>
</g>
<g >
<title>copyin (18 samples, 0.11%)</title><rect x="1024.5" y="421" width="1.3" height="15.0" fill="rgb(253,209,9)" rx="2" ry="2" />
<text  x="1027.54" y="431.5" ></text>
</g>
<g >
<title>_cond_resched (82 samples, 0.50%)</title><rect x="911.8" y="437" width="5.9" height="15.0" fill="rgb(219,122,37)" rx="2" ry="2" />
<text  x="914.78" y="447.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.01%)</title><rect x="456.4" y="517" width="0.2" height="15.0" fill="rgb(251,67,50)" rx="2" ry="2" />
<text  x="459.43" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (19 samples, 0.12%)</title><rect x="455.1" y="501" width="1.3" height="15.0" fill="rgb(243,174,48)" rx="2" ry="2" />
<text  x="458.05" y="511.5" ></text>
</g>
<g >
<title>irq_exit (5 samples, 0.03%)</title><rect x="657.8" y="517" width="0.4" height="15.0" fill="rgb(227,176,23)" rx="2" ry="2" />
<text  x="660.83" y="527.5" ></text>
</g>
<g >
<title>__fdget_pos (626 samples, 3.84%)</title><rect x="677.1" y="533" width="45.4" height="15.0" fill="rgb(238,110,19)" rx="2" ry="2" />
<text  x="680.11" y="543.5" >__fd..</text>
</g>
<g >
<title>ep_send_events_proc (6 samples, 0.04%)</title><rect x="642.3" y="485" width="0.4" height="15.0" fill="rgb(229,20,48)" rx="2" ry="2" />
<text  x="645.25" y="495.5" ></text>
</g>
<g >
<title>__kfree_skb (2 samples, 0.01%)</title><rect x="1022.1" y="69" width="0.1" height="15.0" fill="rgb(207,151,30)" rx="2" ry="2" />
<text  x="1025.08" y="79.5" ></text>
</g>
<g >
<title>schedule (24 samples, 0.15%)</title><rect x="643.0" y="485" width="1.7" height="15.0" fill="rgb(250,57,10)" rx="2" ry="2" />
<text  x="645.98" y="495.5" ></text>
</g>
<g >
<title>__alloc_skb (16 samples, 0.10%)</title><rect x="1031.8" y="421" width="1.2" height="15.0" fill="rgb(210,220,25)" rx="2" ry="2" />
<text  x="1034.79" y="431.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (145 samples, 0.89%)</title><rect x="1012.0" y="165" width="10.5" height="15.0" fill="rgb(247,148,9)" rx="2" ry="2" />
<text  x="1015.01" y="175.5" ></text>
</g>
<g >
<title>loopback_xmit (4 samples, 0.02%)</title><rect x="1010.9" y="309" width="0.3" height="15.0" fill="rgb(217,206,28)" rx="2" ry="2" />
<text  x="1013.92" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (9 samples, 0.06%)</title><rect x="1023.2" y="405" width="0.6" height="15.0" fill="rgb(252,226,51)" rx="2" ry="2" />
<text  x="1026.17" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (664 samples, 4.08%)</title><rect x="1059.0" y="421" width="48.1" height="15.0" fill="rgb(212,115,21)" rx="2" ry="2" />
<text  x="1061.97" y="431.5" >_raw..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.01%)</title><rect x="930.5" y="421" width="0.1" height="15.0" fill="rgb(235,58,5)" rx="2" ry="2" />
<text  x="933.48" y="431.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.01%)</title><rect x="658.2" y="517" width="0.1" height="15.0" fill="rgb(213,206,27)" rx="2" ry="2" />
<text  x="661.20" y="527.5" ></text>
</g>
<g >
<title>tcp_send_mss (498 samples, 3.06%)</title><rect x="1118.5" y="437" width="36.1" height="15.0" fill="rgb(247,143,1)" rx="2" ry="2" />
<text  x="1121.54" y="447.5" >tcp..</text>
</g>
<g >
<title>__softirqentry_text_start (27 samples, 0.17%)</title><rect x="454.6" y="533" width="2.0" height="15.0" fill="rgb(253,208,12)" rx="2" ry="2" />
<text  x="457.62" y="543.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (12 samples, 0.07%)</title><rect x="1021.5" y="117" width="0.9" height="15.0" fill="rgb(253,133,50)" rx="2" ry="2" />
<text  x="1024.50" y="127.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (5 samples, 0.03%)</title><rect x="658.5" y="453" width="0.3" height="15.0" fill="rgb(245,165,33)" rx="2" ry="2" />
<text  x="661.49" y="463.5" ></text>
</g>
<g >
<title>netif_rx_internal (2 samples, 0.01%)</title><rect x="1010.9" y="293" width="0.2" height="15.0" fill="rgb(231,20,15)" rx="2" ry="2" />
<text  x="1013.92" y="303.5" ></text>
</g>
<g >
<title>sk_stream_error (21 samples, 0.13%)</title><rect x="1033.0" y="437" width="1.5" height="15.0" fill="rgb(214,151,28)" rx="2" ry="2" />
<text  x="1036.02" y="447.5" ></text>
</g>
<g >
<title>vmware_sched_clock (8 samples, 0.05%)</title><rect x="1023.2" y="373" width="0.6" height="15.0" fill="rgb(211,103,38)" rx="2" ry="2" />
<text  x="1026.24" y="383.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (2 samples, 0.01%)</title><rect x="659.0" y="421" width="0.1" height="15.0" fill="rgb(210,22,51)" rx="2" ry="2" />
<text  x="661.99" y="431.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.44 (2 samples, 0.01%)</title><rect x="1012.1" y="133" width="0.1" height="15.0" fill="rgb(228,214,36)" rx="2" ry="2" />
<text  x="1015.08" y="143.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (7 samples, 0.04%)</title><rect x="1032.0" y="389" width="0.5" height="15.0" fill="rgb(211,144,49)" rx="2" ry="2" />
<text  x="1035.01" y="399.5" ></text>
</g>
<g >
<title>rw_verify_area (34 samples, 0.21%)</title><rect x="1154.9" y="517" width="2.4" height="15.0" fill="rgb(214,176,44)" rx="2" ry="2" />
<text  x="1157.85" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="658.7" y="341" width="0.1" height="15.0" fill="rgb(244,190,4)" rx="2" ry="2" />
<text  x="661.70" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="1031.6" y="405" width="0.2" height="15.0" fill="rgb(254,104,36)" rx="2" ry="2" />
<text  x="1034.65" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (178 samples, 1.09%)</title><rect x="917.7" y="437" width="12.9" height="15.0" fill="rgb(254,82,24)" rx="2" ry="2" />
<text  x="920.72" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="1022.2" y="69" width="0.2" height="15.0" fill="rgb(233,169,41)" rx="2" ry="2" />
<text  x="1025.23" y="79.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.49 (2 samples, 0.01%)</title><rect x="1021.5" y="69" width="0.1" height="15.0" fill="rgb(207,59,0)" rx="2" ry="2" />
<text  x="1024.50" y="79.5" ></text>
</g>
<g >
<title>tcp_ack (5 samples, 0.03%)</title><rect x="937.0" y="389" width="0.4" height="15.0" fill="rgb(216,165,43)" rx="2" ry="2" />
<text  x="940.00" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (10,119 samples, 62.15%)</title><rect x="456.6" y="565" width="733.3" height="15.0" fill="rgb(220,153,35)" rx="2" ry="2" />
<text  x="459.58" y="575.5" >do_syscall_64</text>
</g>
<g >
<title>__fget_light (609 samples, 3.74%)</title><rect x="678.3" y="517" width="44.2" height="15.0" fill="rgb(215,17,3)" rx="2" ry="2" />
<text  x="681.34" y="527.5" >__fg..</text>
</g>
<g >
<title>fput (140 samples, 0.86%)</title><rect x="722.6" y="533" width="10.1" height="15.0" fill="rgb(213,156,42)" rx="2" ry="2" />
<text  x="725.55" y="543.5" ></text>
</g>
<g >
<title>tcp_write_xmit (192 samples, 1.18%)</title><rect x="1010.4" y="421" width="13.9" height="15.0" fill="rgb(223,181,1)" rx="2" ry="2" />
<text  x="1013.41" y="431.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2 samples, 0.01%)</title><rect x="658.7" y="389" width="0.1" height="15.0" fill="rgb(219,204,33)" rx="2" ry="2" />
<text  x="661.70" y="399.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.49 (2 samples, 0.01%)</title><rect x="1012.1" y="101" width="0.1" height="15.0" fill="rgb(254,133,1)" rx="2" ry="2" />
<text  x="1015.08" y="111.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (192 samples, 1.18%)</title><rect x="1010.4" y="437" width="13.9" height="15.0" fill="rgb(228,109,4)" rx="2" ry="2" />
<text  x="1013.41" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1189.7" y="469" width="0.2" height="15.0" fill="rgb(205,21,34)" rx="2" ry="2" />
<text  x="1192.71" y="479.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (2 samples, 0.01%)</title><rect x="454.9" y="341" width="0.2" height="15.0" fill="rgb(207,152,33)" rx="2" ry="2" />
<text  x="457.91" y="351.5" ></text>
</g>
<g >
<title>ksys_read (19 samples, 0.12%)</title><rect x="658.2" y="549" width="1.4" height="15.0" fill="rgb(211,227,25)" rx="2" ry="2" />
<text  x="661.20" y="559.5" ></text>
</g>
<g >
<title>__fget (476 samples, 2.92%)</title><rect x="688.0" y="501" width="34.5" height="15.0" fill="rgb(242,34,27)" rx="2" ry="2" />
<text  x="690.98" y="511.5" >__..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (2 samples, 0.01%)</title><rect x="658.7" y="293" width="0.1" height="15.0" fill="rgb(210,214,38)" rx="2" ry="2" />
<text  x="661.70" y="303.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="1189.7" y="437" width="0.2" height="15.0" fill="rgb(253,45,24)" rx="2" ry="2" />
<text  x="1192.71" y="447.5" ></text>
</g>
<g >
<title>__inet_lookup_established (5 samples, 0.03%)</title><rect x="1011.6" y="165" width="0.3" height="15.0" fill="rgb(213,133,11)" rx="2" ry="2" />
<text  x="1014.57" y="175.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (26 samples, 0.16%)</title><rect x="642.8" y="501" width="1.9" height="15.0" fill="rgb(217,127,43)" rx="2" ry="2" />
<text  x="645.83" y="511.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (2 samples, 0.01%)</title><rect x="1024.2" y="405" width="0.1" height="15.0" fill="rgb(233,154,7)" rx="2" ry="2" />
<text  x="1027.18" y="415.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (153 samples, 0.94%)</title><rect x="1011.4" y="181" width="11.1" height="15.0" fill="rgb(207,8,12)" rx="2" ry="2" />
<text  x="1014.43" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (2 samples, 0.01%)</title><rect x="659.0" y="437" width="0.1" height="15.0" fill="rgb(231,95,30)" rx="2" ry="2" />
<text  x="661.99" y="447.5" ></text>
</g>
<g >
<title>common_file_perm (323 samples, 1.98%)</title><rect x="1166.4" y="501" width="23.5" height="15.0" fill="rgb(242,209,31)" rx="2" ry="2" />
<text  x="1169.45" y="511.5" >c..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="1031.6" y="341" width="0.2" height="15.0" fill="rgb(234,8,45)" rx="2" ry="2" />
<text  x="1034.65" y="351.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2 samples, 0.01%)</title><rect x="658.6" y="389" width="0.1" height="15.0" fill="rgb(220,132,29)" rx="2" ry="2" />
<text  x="661.56" y="399.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (27 samples, 0.17%)</title><rect x="454.6" y="565" width="2.0" height="15.0" fill="rgb(231,103,16)" rx="2" ry="2" />
<text  x="457.62" y="575.5" ></text>
</g>
<g >
<title>tcp_collapse (12 samples, 0.07%)</title><rect x="1021.5" y="101" width="0.9" height="15.0" fill="rgb(207,176,13)" rx="2" ry="2" />
<text  x="1024.50" y="111.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (2 samples, 0.01%)</title><rect x="1154.7" y="437" width="0.2" height="15.0" fill="rgb(206,215,41)" rx="2" ry="2" />
<text  x="1157.71" y="447.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (4 samples, 0.02%)</title><rect x="1010.9" y="325" width="0.3" height="15.0" fill="rgb(250,84,29)" rx="2" ry="2" />
<text  x="1013.92" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (45 samples, 0.28%)</title><rect x="904.6" y="453" width="3.3" height="15.0" fill="rgb(217,225,2)" rx="2" ry="2" />
<text  x="907.60" y="463.5" ></text>
</g>
<g >
<title>__indirect_thunk_start (86 samples, 0.53%)</title><rect x="440.2" y="581" width="6.2" height="15.0" fill="rgb(223,113,46)" rx="2" ry="2" />
<text  x="443.20" y="591.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (72 samples, 0.44%)</title><rect x="1013.1" y="117" width="5.2" height="15.0" fill="rgb(211,139,32)" rx="2" ry="2" />
<text  x="1016.09" y="127.5" ></text>
</g>
<g >
<title>finish_task_switch (24 samples, 0.15%)</title><rect x="643.0" y="453" width="1.7" height="15.0" fill="rgb(210,129,7)" rx="2" ry="2" />
<text  x="645.98" y="463.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.18 (5 samples, 0.03%)</title><rect x="642.3" y="469" width="0.4" height="15.0" fill="rgb(233,138,9)" rx="2" ry="2" />
<text  x="645.32" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="657.8" y="533" width="0.4" height="15.0" fill="rgb(239,80,51)" rx="2" ry="2" />
<text  x="660.83" y="543.5" ></text>
</g>
<g >
<title>process_backlog (2 samples, 0.01%)</title><rect x="658.7" y="309" width="0.1" height="15.0" fill="rgb(206,124,25)" rx="2" ry="2" />
<text  x="661.70" y="319.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (3 samples, 0.02%)</title><rect x="1012.3" y="117" width="0.2" height="15.0" fill="rgb(239,70,53)" rx="2" ry="2" />
<text  x="1015.30" y="127.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (3 samples, 0.02%)</title><rect x="454.8" y="485" width="0.3" height="15.0" fill="rgb(209,84,3)" rx="2" ry="2" />
<text  x="457.84" y="495.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (5 samples, 0.03%)</title><rect x="658.5" y="437" width="0.3" height="15.0" fill="rgb(236,212,35)" rx="2" ry="2" />
<text  x="661.49" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (50 samples, 0.31%)</title><rect x="1112.6" y="405" width="3.6" height="15.0" fill="rgb(250,190,41)" rx="2" ry="2" />
<text  x="1115.60" y="415.5" ></text>
</g>
<g >
<title>skb_release_head_state (2 samples, 0.01%)</title><rect x="1012.6" y="101" width="0.1" height="15.0" fill="rgb(230,155,8)" rx="2" ry="2" />
<text  x="1015.59" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (31 samples, 0.19%)</title><rect x="1109.3" y="405" width="2.2" height="15.0" fill="rgb(206,85,42)" rx="2" ry="2" />
<text  x="1112.27" y="415.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2 samples, 0.01%)</title><rect x="1010.9" y="277" width="0.2" height="15.0" fill="rgb(246,37,9)" rx="2" ry="2" />
<text  x="1013.92" y="287.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (2 samples, 0.01%)</title><rect x="657.9" y="485" width="0.2" height="15.0" fill="rgb(211,207,15)" rx="2" ry="2" />
<text  x="660.91" y="495.5" ></text>
</g>
<g >
<title>tcp_push (3 samples, 0.02%)</title><rect x="1116.7" y="437" width="0.2" height="15.0" fill="rgb(231,44,34)" rx="2" ry="2" />
<text  x="1119.73" y="447.5" ></text>
</g>
<g >
<title>tcp_sendmsg (3,803 samples, 23.36%)</title><rect x="879.2" y="469" width="275.7" height="15.0" fill="rgb(235,202,50)" rx="2" ry="2" />
<text  x="882.24" y="479.5" >tcp_sendmsg</text>
</g>
<g >
<title>__skb_clone (2 samples, 0.01%)</title><rect x="1022.8" y="389" width="0.2" height="15.0" fill="rgb(232,79,48)" rx="2" ry="2" />
<text  x="1025.81" y="399.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (18 samples, 0.11%)</title><rect x="1024.5" y="405" width="1.3" height="15.0" fill="rgb(224,182,17)" rx="2" ry="2" />
<text  x="1027.54" y="415.5" ></text>
</g>
<g >
<title>gate_server (16,282 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(252,121,50)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >gate_server</text>
</g>
<g >
<title>do_softirq_own_stack (2 samples, 0.01%)</title><rect x="658.7" y="357" width="0.1" height="15.0" fill="rgb(225,135,12)" rx="2" ry="2" />
<text  x="661.70" y="367.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (27 samples, 0.17%)</title><rect x="454.6" y="581" width="2.0" height="15.0" fill="rgb(244,193,34)" rx="2" ry="2" />
<text  x="457.62" y="591.5" ></text>
</g>
<g >
<title>net_rx_action (156 samples, 0.96%)</title><rect x="1011.2" y="277" width="11.3" height="15.0" fill="rgb(231,67,23)" rx="2" ry="2" />
<text  x="1014.21" y="287.5" ></text>
</g>
<g >
<title>inet_sendmsg (465 samples, 2.86%)</title><rect x="806.8" y="469" width="33.7" height="15.0" fill="rgb(217,8,39)" rx="2" ry="2" />
<text  x="809.84" y="479.5" >in..</text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.01%)</title><rect x="1021.5" y="85" width="0.1" height="15.0" fill="rgb(234,207,40)" rx="2" ry="2" />
<text  x="1024.50" y="95.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (3 samples, 0.02%)</title><rect x="1012.3" y="53" width="0.2" height="15.0" fill="rgb(238,225,51)" rx="2" ry="2" />
<text  x="1015.30" y="63.5" ></text>
</g>
<g >
<title>ip_finish_output2 (3 samples, 0.02%)</title><rect x="1012.3" y="85" width="0.2" height="15.0" fill="rgb(218,193,47)" rx="2" ry="2" />
<text  x="1015.30" y="95.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (143 samples, 0.88%)</title><rect x="894.2" y="453" width="10.4" height="15.0" fill="rgb(226,187,29)" rx="2" ry="2" />
<text  x="897.24" y="463.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="1189.7" y="453" width="0.2" height="15.0" fill="rgb(224,27,30)" rx="2" ry="2" />
<text  x="1192.71" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (5 samples, 0.03%)</title><rect x="657.8" y="549" width="0.4" height="15.0" fill="rgb(236,156,9)" rx="2" ry="2" />
<text  x="660.83" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_free (2 samples, 0.01%)</title><rect x="658.8" y="453" width="0.2" height="15.0" fill="rgb(211,44,3)" rx="2" ry="2" />
<text  x="661.85" y="463.5" ></text>
</g>
<g >
<title>loopback_xmit (3 samples, 0.02%)</title><rect x="1012.3" y="37" width="0.2" height="15.0" fill="rgb(243,37,3)" rx="2" ry="2" />
<text  x="1015.30" y="47.5" ></text>
</g>
<g >
<title>aa_sk_perm (257 samples, 1.58%)</title><rect x="845.4" y="453" width="18.6" height="15.0" fill="rgb(239,182,8)" rx="2" ry="2" />
<text  x="848.39" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10,119 samples, 62.15%)</title><rect x="456.6" y="581" width="733.3" height="15.0" fill="rgb(246,67,38)" rx="2" ry="2" />
<text  x="459.58" y="591.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.01%)</title><rect x="456.4" y="501" width="0.2" height="15.0" fill="rgb(226,4,40)" rx="2" ry="2" />
<text  x="459.43" y="511.5" ></text>
</g>
<g >
<title>new_sync_write (5,519 samples, 33.90%)</title><rect x="754.9" y="517" width="400.0" height="15.0" fill="rgb(222,197,0)" rx="2" ry="2" />
<text  x="757.87" y="527.5" >new_sync_write</text>
</g>
<g >
<title>aa_file_perm (65 samples, 0.40%)</title><rect x="1185.0" y="485" width="4.7" height="15.0" fill="rgb(228,163,8)" rx="2" ry="2" />
<text  x="1188.00" y="495.5" ></text>
</g>
<g >
<title>tcp_ack (2 samples, 0.01%)</title><rect x="454.9" y="373" width="0.2" height="15.0" fill="rgb(208,4,4)" rx="2" ry="2" />
<text  x="457.91" y="383.5" ></text>
</g>
<g >
<title>new_sync_read (14 samples, 0.09%)</title><rect x="658.3" y="517" width="1.1" height="15.0" fill="rgb(248,34,53)" rx="2" ry="2" />
<text  x="661.34" y="527.5" ></text>
</g>
<g >
<title>sock_read_iter (13 samples, 0.08%)</title><rect x="658.4" y="501" width="1.0" height="15.0" fill="rgb(218,225,51)" rx="2" ry="2" />
<text  x="661.41" y="511.5" ></text>
</g>
<g >
<title>sock_def_readable (44 samples, 0.27%)</title><rect x="1018.3" y="117" width="3.2" height="15.0" fill="rgb(246,118,7)" rx="2" ry="2" />
<text  x="1021.31" y="127.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2 samples, 0.01%)</title><rect x="658.7" y="229" width="0.1" height="15.0" fill="rgb(236,216,44)" rx="2" ry="2" />
<text  x="661.70" y="239.5" ></text>
</g>
<g >
<title>__inet_lookup_established (2 samples, 0.01%)</title><rect x="658.7" y="213" width="0.1" height="15.0" fill="rgb(236,20,2)" rx="2" ry="2" />
<text  x="661.70" y="223.5" ></text>
</g>
<g >
<title>__release_sock (6 samples, 0.04%)</title><rect x="937.0" y="437" width="0.4" height="15.0" fill="rgb(209,185,0)" rx="2" ry="2" />
<text  x="940.00" y="447.5" ></text>
</g>
<g >
<title>process_backlog (155 samples, 0.95%)</title><rect x="1011.3" y="261" width="11.2" height="15.0" fill="rgb(235,148,3)" rx="2" ry="2" />
<text  x="1014.28" y="271.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2 samples, 0.01%)</title><rect x="658.7" y="245" width="0.1" height="15.0" fill="rgb(245,14,21)" rx="2" ry="2" />
<text  x="661.70" y="255.5" ></text>
</g>
<g >
<title>ipv4_mtu (176 samples, 1.08%)</title><rect x="1135.9" y="405" width="12.8" height="15.0" fill="rgb(217,152,10)" rx="2" ry="2" />
<text  x="1138.94" y="415.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (5 samples, 0.03%)</title><rect x="657.8" y="501" width="0.4" height="15.0" fill="rgb(212,48,23)" rx="2" ry="2" />
<text  x="660.83" y="511.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3 samples, 0.02%)</title><rect x="454.8" y="405" width="0.3" height="15.0" fill="rgb(238,32,37)" rx="2" ry="2" />
<text  x="457.84" y="415.5" ></text>
</g>
<g >
<title>__fdget_pos (2 samples, 0.01%)</title><rect x="658.2" y="533" width="0.1" height="15.0" fill="rgb(240,173,31)" rx="2" ry="2" />
<text  x="661.20" y="543.5" ></text>
</g>
<g >
<title>mod_timer (3 samples, 0.02%)</title><rect x="1023.9" y="373" width="0.2" height="15.0" fill="rgb(244,224,37)" rx="2" ry="2" />
<text  x="1026.89" y="383.5" ></text>
</g>
<g >
<title>sock_def_readable (76 samples, 0.47%)</title><rect x="1012.8" y="133" width="5.5" height="15.0" fill="rgb(240,68,4)" rx="2" ry="2" />
<text  x="1015.80" y="143.5" ></text>
</g>
<g >
<title>common_file_perm (3 samples, 0.02%)</title><rect x="659.4" y="501" width="0.2" height="15.0" fill="rgb(225,161,47)" rx="2" ry="2" />
<text  x="662.36" y="511.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (154 samples, 0.95%)</title><rect x="1011.4" y="245" width="11.1" height="15.0" fill="rgb(252,80,26)" rx="2" ry="2" />
<text  x="1014.35" y="255.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (3 samples, 0.02%)</title><rect x="454.8" y="421" width="0.3" height="15.0" fill="rgb(214,177,33)" rx="2" ry="2" />
<text  x="457.84" y="431.5" ></text>
</g>
<g >
<title>kfree_skb_partial (2 samples, 0.01%)</title><rect x="1012.6" y="133" width="0.1" height="15.0" fill="rgb(209,121,40)" rx="2" ry="2" />
<text  x="1015.59" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (44 samples, 0.27%)</title><rect x="1018.3" y="85" width="3.2" height="15.0" fill="rgb(235,125,36)" rx="2" ry="2" />
<text  x="1021.31" y="95.5" ></text>
</g>
<g >
<title>irq_exit (27 samples, 0.17%)</title><rect x="454.6" y="549" width="2.0" height="15.0" fill="rgb(229,107,1)" rx="2" ry="2" />
<text  x="457.62" y="559.5" ></text>
</g>
<g >
<title>rcu_all_qs (35 samples, 0.21%)</title><rect x="915.2" y="421" width="2.5" height="15.0" fill="rgb(242,123,29)" rx="2" ry="2" />
<text  x="918.18" y="431.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (2 samples, 0.01%)</title><rect x="1021.5" y="53" width="0.1" height="15.0" fill="rgb(240,50,3)" rx="2" ry="2" />
<text  x="1024.50" y="63.5" ></text>
</g>
<g >
<title>memcpy_orig (5 samples, 0.03%)</title><rect x="1021.6" y="69" width="0.4" height="15.0" fill="rgb(223,28,23)" rx="2" ry="2" />
<text  x="1024.65" y="79.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (2 samples, 0.01%)</title><rect x="1012.1" y="85" width="0.1" height="15.0" fill="rgb(217,48,34)" rx="2" ry="2" />
<text  x="1015.08" y="95.5" ></text>
</g>
<g >
<title>add_wait_queue (61 samples, 0.37%)</title><rect x="1107.1" y="421" width="4.4" height="15.0" fill="rgb(222,2,31)" rx="2" ry="2" />
<text  x="1110.09" y="431.5" ></text>
</g>
<g >
<title>tcp_xmit_recovery.part.65 (2 samples, 0.01%)</title><rect x="454.9" y="357" width="0.2" height="15.0" fill="rgb(209,4,47)" rx="2" ry="2" />
<text  x="457.91" y="367.5" ></text>
</g>
<g >
<title>ip_output (5 samples, 0.03%)</title><rect x="658.5" y="421" width="0.3" height="15.0" fill="rgb(212,136,5)" rx="2" ry="2" />
<text  x="661.49" y="431.5" ></text>
</g>
<g >
<title>release_sock (362 samples, 2.22%)</title><rect x="930.6" y="453" width="26.3" height="15.0" fill="rgb(247,147,32)" rx="2" ry="2" />
<text  x="933.62" y="463.5" >r..</text>
</g>
<g >
<title>__alloc_skb (2 samples, 0.01%)</title><rect x="1012.1" y="117" width="0.1" height="15.0" fill="rgb(242,180,52)" rx="2" ry="2" />
<text  x="1015.08" y="127.5" ></text>
</g>
<g >
<title>tcp_rcv_established (6 samples, 0.04%)</title><rect x="937.0" y="405" width="0.4" height="15.0" fill="rgb(236,49,32)" rx="2" ry="2" />
<text  x="940.00" y="415.5" ></text>
</g>
<g >
<title>tcp_rcv_established (145 samples, 0.89%)</title><rect x="1012.0" y="149" width="10.5" height="15.0" fill="rgb(206,127,54)" rx="2" ry="2" />
<text  x="1015.01" y="159.5" ></text>
</g>
<g >
<title>tcp_established_options (82 samples, 0.50%)</title><rect x="1148.7" y="405" width="5.9" height="15.0" fill="rgb(232,191,41)" rx="2" ry="2" />
<text  x="1151.69" y="415.5" ></text>
</g>
<g >
<title>do_softirq.part.19 (2 samples, 0.01%)</title><rect x="658.7" y="373" width="0.1" height="15.0" fill="rgb(242,52,15)" rx="2" ry="2" />
<text  x="661.70" y="383.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (173 samples, 1.06%)</title><rect x="1010.6" y="405" width="12.6" height="15.0" fill="rgb(237,186,41)" rx="2" ry="2" />
<text  x="1013.63" y="415.5" ></text>
</g>
<g >
<title>__fget (3 samples, 0.02%)</title><rect x="641.7" y="501" width="0.3" height="15.0" fill="rgb(234,64,38)" rx="2" ry="2" />
<text  x="644.74" y="511.5" ></text>
</g>
<g >
<title>tcp_data_queue (56 samples, 0.34%)</title><rect x="1018.3" y="133" width="4.1" height="15.0" fill="rgb(228,136,49)" rx="2" ry="2" />
<text  x="1021.31" y="143.5" ></text>
</g>
<g >
<title>do_epoll_wait (46 samples, 0.28%)</title><rect x="641.6" y="533" width="3.3" height="15.0" fill="rgb(240,92,1)" rx="2" ry="2" />
<text  x="644.60" y="543.5" ></text>
</g>
<g >
<title>sock_write_iter (5,308 samples, 32.60%)</title><rect x="770.2" y="501" width="384.7" height="15.0" fill="rgb(252,8,24)" rx="2" ry="2" />
<text  x="773.17" y="511.5" >sock_write_iter</text>
</g>
<g >
<title>vfs_read (17 samples, 0.10%)</title><rect x="658.3" y="533" width="1.3" height="15.0" fill="rgb(247,73,43)" rx="2" ry="2" />
<text  x="661.34" y="543.5" ></text>
</g>
<g >
<title>call_timer_fn (2 samples, 0.01%)</title><rect x="658.1" y="469" width="0.1" height="15.0" fill="rgb(234,133,38)" rx="2" ry="2" />
<text  x="661.05" y="479.5" ></text>
</g>
<g >
<title>ep_poll (39 samples, 0.24%)</title><rect x="642.0" y="517" width="2.8" height="15.0" fill="rgb(223,90,31)" rx="2" ry="2" />
<text  x="644.96" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath (2 samples, 0.01%)</title><rect x="1031.6" y="389" width="0.2" height="15.0" fill="rgb(238,7,24)" rx="2" ry="2" />
<text  x="1034.65" y="399.5" ></text>
</g>
<g >
<title>ip_local_deliver (153 samples, 0.94%)</title><rect x="1011.4" y="213" width="11.1" height="15.0" fill="rgb(209,164,29)" rx="2" ry="2" />
<text  x="1014.43" y="223.5" ></text>
</g>
<g >
<title>ip_output (163 samples, 1.00%)</title><rect x="1010.8" y="373" width="11.9" height="15.0" fill="rgb(222,172,34)" rx="2" ry="2" />
<text  x="1013.85" y="383.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (153 samples, 0.94%)</title><rect x="1011.4" y="197" width="11.1" height="15.0" fill="rgb(252,53,9)" rx="2" ry="2" />
<text  x="1014.43" y="207.5" ></text>
</g>
<g >
<title>tcp_collapse_one (5 samples, 0.03%)</title><rect x="1022.0" y="85" width="0.4" height="15.0" fill="rgb(213,51,12)" rx="2" ry="2" />
<text  x="1025.01" y="95.5" ></text>
</g>
<g >
<title>lock_sock_nested (2 samples, 0.01%)</title><rect x="659.0" y="453" width="0.1" height="15.0" fill="rgb(230,190,1)" rx="2" ry="2" />
<text  x="661.99" y="463.5" ></text>
</g>
<g >
<title>all (16,282 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(253,101,43)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (210 samples, 1.29%)</title><rect x="864.0" y="453" width="15.2" height="15.0" fill="rgb(232,26,32)" rx="2" ry="2" />
<text  x="867.02" y="463.5" ></text>
</g>
<g >
<title>sock_zerocopy_put_abort (7 samples, 0.04%)</title><rect x="1116.2" y="437" width="0.5" height="15.0" fill="rgb(220,203,40)" rx="2" ry="2" />
<text  x="1119.22" y="447.5" ></text>
</g>
<g >
<title>ip_local_deliver (3 samples, 0.02%)</title><rect x="454.8" y="453" width="0.3" height="15.0" fill="rgb(229,29,41)" rx="2" ry="2" />
<text  x="457.84" y="463.5" ></text>
</g>
<g >
<title>ip_output (3 samples, 0.02%)</title><rect x="1012.3" y="101" width="0.2" height="15.0" fill="rgb(223,50,43)" rx="2" ry="2" />
<text  x="1015.30" y="111.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2,732 samples, 16.78%)</title><rect x="956.9" y="453" width="198.0" height="15.0" fill="rgb(223,197,53)" rx="2" ry="2" />
<text  x="959.86" y="463.5" >tcp_sendmsg_locked</text>
</g>
<g >
<title>__wake_up_common_lock (44 samples, 0.27%)</title><rect x="1018.3" y="101" width="3.2" height="15.0" fill="rgb(206,98,28)" rx="2" ry="2" />
<text  x="1021.31" y="111.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.22 (8 samples, 0.05%)</title><rect x="642.2" y="501" width="0.6" height="15.0" fill="rgb(249,110,37)" rx="2" ry="2" />
<text  x="645.18" y="511.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (165 samples, 1.01%)</title><rect x="1010.8" y="389" width="11.9" height="15.0" fill="rgb(236,76,45)" rx="2" ry="2" />
<text  x="1013.78" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="657.9" y="469" width="0.2" height="15.0" fill="rgb(249,198,40)" rx="2" ry="2" />
<text  x="660.91" y="479.5" ></text>
</g>
<g >
<title>remove_wait_queue (64 samples, 0.39%)</title><rect x="1111.6" y="421" width="4.6" height="15.0" fill="rgb(216,148,29)" rx="2" ry="2" />
<text  x="1114.58" y="431.5" ></text>
</g>
<g >
<title>__slab_alloc (3 samples, 0.02%)</title><rect x="1032.7" y="389" width="0.3" height="15.0" fill="rgb(233,118,32)" rx="2" ry="2" />
<text  x="1035.73" y="399.5" ></text>
</g>
<g >
<title>__schedule (24 samples, 0.15%)</title><rect x="643.0" y="469" width="1.7" height="15.0" fill="rgb(224,218,52)" rx="2" ry="2" />
<text  x="645.98" y="479.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (82 samples, 0.50%)</title><rect x="1025.8" y="437" width="6.0" height="15.0" fill="rgb(241,223,7)" rx="2" ry="2" />
<text  x="1028.85" y="447.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (5 samples, 0.03%)</title><rect x="1023.8" y="405" width="0.4" height="15.0" fill="rgb(249,128,46)" rx="2" ry="2" />
<text  x="1026.82" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (46 samples, 0.28%)</title><rect x="641.6" y="549" width="3.3" height="15.0" fill="rgb(221,7,7)" rx="2" ry="2" />
<text  x="644.60" y="559.5" ></text>
</g>
<g >
<title>ip_rcv (2 samples, 0.01%)</title><rect x="658.7" y="277" width="0.1" height="15.0" fill="rgb(206,95,11)" rx="2" ry="2" />
<text  x="661.70" y="287.5" ></text>
</g>
<g >
<title>net_rx_action (3 samples, 0.02%)</title><rect x="454.8" y="517" width="0.3" height="15.0" fill="rgb(240,44,38)" rx="2" ry="2" />
<text  x="457.84" y="527.5" ></text>
</g>
<g >
<title>ip_finish_output2 (162 samples, 0.99%)</title><rect x="1010.8" y="357" width="11.8" height="15.0" fill="rgb(211,122,16)" rx="2" ry="2" />
<text  x="1013.85" y="367.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.49 (7 samples, 0.04%)</title><rect x="1032.0" y="405" width="0.5" height="15.0" fill="rgb(229,56,4)" rx="2" ry="2" />
<text  x="1035.01" y="415.5" ></text>
</g>
<g >
<title>vfs_write (6,309 samples, 38.75%)</title><rect x="732.7" y="533" width="457.2" height="15.0" fill="rgb(212,10,40)" rx="2" ry="2" />
<text  x="735.70" y="543.5" >vfs_write</text>
</g>
<g >
<title>sched_clock (8 samples, 0.05%)</title><rect x="1023.2" y="389" width="0.6" height="15.0" fill="rgb(252,58,23)" rx="2" ry="2" />
<text  x="1026.24" y="399.5" ></text>
</g>
</g>
</svg>
